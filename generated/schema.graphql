### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String
  user: User
}

type Chronicle {
  id: String
  name: String
  shortcut: String
}

input CreateServerInput {
  adena: Int!
  chronicle: ID!
  description: String!
  drop: Int!
  name: String!
  openingAt: DateTime
  sp: Int!
  spoil: Int!
  xp: Int!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Mutation {
  createServer(input: CreateServerInput!): Server
  deleteServer(id: ID!): Server
  login(email: String!, password: String!): AuthPayload
  register(email: String!, name: String, password: String!): User
  vote(server: ID!): Vote
}

type Query {
  approvedServers: [Server]
  chronicles: [Chronicle]
  me: User
  server(id: ID!): Server
  unapprovedServers: [Server]
  voteStatus: VoteStatus
}

type Server {
  addedBy: User
  chronicle: Chronicle
  createdAt: DateTime
  description: String
  id: String
  name: String
  openingAt: DateTime
  rates: ServerRates
}

type ServerRates {
  adena: Int
  drop: Int
  sp: Int
  spoil: Int
  xp: Int
}

type User {
  addedServers: [Server]
  email: String
  id: String
  name: String
}

type Vote {
  createdAt: DateTime
  id: String
  ip: String
  server: Server
  votedBy: User
}

type VoteStatus {
  ip: String
  lastVotedAt: DateTime
  server: Server
  votedAlready: Boolean
}
